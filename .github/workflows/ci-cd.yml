name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history for conventional commits
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:unit
      env:
        CI: true
    
    # E2E tests are disabled in CI/CD due to Cloudflare Workers runtime requirements
    # E2E tests should be run locally before deployment
    # TODO: Consider using Cloudflare's Vitest integration for better CI/CD testing
    
    - name: Build project
      run: npm run build
    
    # Only run version bump and deploy on main branch pushes (not PRs) AND if all tests pass
    - name: Bump version based on conventional commits
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: version
      run: |
        # Install semantic-release dependencies
        npm install --save-dev semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github
        
        # Run semantic-release to bump version
        npx semantic-release --dry-run > release-output.txt 2>&1 || true
        
        # Check if version was bumped
        if grep -q "Published release" release-output.txt; then
          echo "version_bumped=true" >> $GITHUB_OUTPUT
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        else
          echo "version_bumped=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Deploy to Cloudflare Workers
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.version.outputs.version_bumped == 'true'
      run: |
        npm install -g wrangler
        echo "${{ secrets.CLOUDFLARE_API_TOKEN }}" | wrangler auth login
        wrangler deploy
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    
    - name: Create Release Notes
      if: steps.version.outputs.version_bumped == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.new_version }}
        release_name: Release v${{ steps.version.outputs.new_version }}
        body: |
          Automated release v${{ steps.version.outputs.new_version }}
          
          Changes in this release have been automatically determined from conventional commit messages.
          
          ðŸš€ Deployed to: https://games.emilycogsdill.com
        draft: false
        prerelease: false