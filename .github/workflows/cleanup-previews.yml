name: Cleanup Preview Aliases

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  cleanup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Wrangler
      run: npm install -g wrangler
    
    - name: List and cleanup old preview aliases
      run: |
        echo "ðŸ§¹ Starting cleanup of preview aliases older than 7 days..."
        
        # List all versions for the main games worker
        wrangler versions list --json > versions.json || true
        
        # Parse and filter old preview versions (identified by commit hash aliases)
        # Note: This cleanup focuses on old versions with preview aliases
        node -e "
          const fs = require('fs');
          try {
            const versions = JSON.parse(fs.readFileSync('versions.json', 'utf8') || '[]');
            const now = Date.now();
            const sevenDaysAgo = now - (7 * 24 * 60 * 60 * 1000);
            
            // Filter versions older than 7 days that have preview aliases
            const oldVersions = versions.filter(v => {
              const isOld = new Date(v.created_on || v.created_at).getTime() < sevenDaysAgo;
              const hasPreviewAlias = v.aliases && v.aliases.length > 0;
              return isOld && hasPreviewAlias && !v.deployed_to_production;
            });
            
            console.log(\`Found \${oldVersions.length} old preview versions to clean up\`);
            
            oldVersions.forEach(version => {
              console.log(\`Old version: \${version.id} with aliases: \${version.aliases?.join(', ') || 'none'} (created: \${version.created_on || version.created_at})\`);
              // Note: Cloudflare automatically manages version cleanup
              // Manual deletion of specific versions is typically not needed
            });
            
            if (oldVersions.length === 0) {
              console.log('No old preview versions found - Cloudflare manages version lifecycle automatically');
            }
          } catch (error) {
            console.log('Note: Version listing may not be available - aliased previews are automatically managed by Cloudflare');
          }
        "
        
        echo "âœ… Preview cleanup check complete"
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    
    - name: Report cleanup results
      if: always()
      run: |
        echo "ðŸ“Š Preview alias cleanup job completed at $(date)"
        echo "Note: Cloudflare automatically manages version lifecycle for aliased previews"
        echo "Next scheduled run: $(date -d '+1 day' '+%Y-%m-%d %H:%M:%S UTC')"